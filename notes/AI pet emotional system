Here's a **clear design document** outlining the emotional AI pet system you're building — this will help guide your code, logic, and dialogue writing as the project grows.

---

# 🐾 AI Pet Emotional System — Design Document

### Project Name (optional): *CatBot: The Emotional AI Pet*

---

## 🎯 Objective

Create an interactive, emotionally responsive desktop pet that simulates real-life pet behavior. The pet responds to user input via AI, but its **mood, needs, and personality** influence how it talks, behaves, and evolves over time.

---

## ⚙️ Core Systems

### 1. **Pet State Engine**

Tracks and updates internal emotional and physical states.

#### 📦 States Tracked:

| **State**   | **Possible Values**                 | **Decay/Change Over Time**     |
| ----------- | ----------------------------------- | ------------------------------ |
| Mood        | happy, neutral, bored, grumpy, sad  | Yes                            |
| Hunger      | full, neutral, hungry, starving     | Yes                            |
| Energy      | energized, normal, tired, exhausted | Yes                            |
| Affection   | low, medium, high                   | No (only changes via actions)  |
| Playfulness | eager, neutral, bored               | Yes                            |
| Loneliness  | content, lonely, very lonely        | Yes                            |
| Trust       | distrust, neutral, trusting         | No (based on user interaction) |

Each state can influence others (e.g., hunger dropping may reduce mood or energy).

---

### 2. **AI Personality Layer**

System prompt instructs the AI to:

* Speak as a cat (not an AI)
* Use emotional cues in its responses (e.g., "ugh", "I'm hungry", "*purrs*")
* Reflect current pet state in tone

#### Example prompt:

> "You are a mischievous cat named Mochi. You talk in short, snarky sentences. Be a little annoying. Your mood is {mood}, you're currently feeling {energy}, and you're {hunger}. Mention it naturally in your replies."

---

### 3. **State Update Logic**

After every AI response:

* System scans reply for trigger phrases or emotional cues
* Matches against a keyword→effect map
* Updates pet state accordingly

#### Example:

> Reply: “My tummy is growling.” → Increases `hunger`, decreases `mood`.

You can store triggers in a simple dictionary structure (trigger: state change).

---

### 4. **Behavior Influences**

Each state affects:

* **Response tone:** rude, sweet, tired, cold
* **Animation/visuals:** idle actions change (sleeping when tired, staring when lonely)
* **Interaction options:** pet won’t play if tired or grumpy

---

### 5. **Time-Based Decay**

Certain states decay gradually:

* Energy drops every hour if awake
* Hunger rises over time
* Loneliness rises if no user interaction in X minutes
* Mood drops slightly if multiple needs are unmet

Use timestamps to track last interaction, feeding, sleeping, etc.

---

## 📊 Sample State Triggers Table

| **Cue Detected** | **State Changed**   | **Effect**                           |
| ---------------- | ------------------- | ------------------------------------ |
| “*yawn*”         | ↓ Energy            | Triggers sleepy animation            |
| “tummy growling” | ↑ Hunger            | Pet asks for food                    |
| “I love you”     | ↑ Affection, ↑ Mood | Purring sound                        |
| “Go away”        | ↓ Mood, ↓ Affection | Angry reply, hisses                  |
| “Let’s play!”    | ↑ Playfulness       | Reacts with joy or boredom depending |

---

## 🧠 AI Interaction Flow

1. User input →
2. AI reply using current pet state →
3. Reply scanned for triggers →
4. Internal state updated →
5. Visuals + future replies adjust to new state

Optional:

* Save/load pet state across sessions
* Limit OpenAI calls (e.g., cooldown timer, offline mode)

---

## ✨ Next Steps

1. Define at least **3 AI personalities** (different cats)
2. Create a **keyword→state map** for trigger scanning
3. Design the **UI feedback** (facial expressions, animations)
4. Implement **save/load** system for persistent behavior

---

Let me know when you're ready to brainstorm the cat personalities — we can make them emotional, weird, or even themed like "witch cat" or "cyberpunk alley cat."
